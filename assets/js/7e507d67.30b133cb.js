"use strict";(self.webpackChunkslop_site=self.webpackChunkslop_site||[]).push([[1691],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,h=u["".concat(l,".").concat(f)]||u[f]||m[f]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},462:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:4},i="For Each (Loop)",s={unversionedId:"Language/Statements/for-each",id:"Language/Statements/for-each",title:"For Each (Loop)",description:"The foreach loop is a simplified version of the repeat statement. It simplifies the loop criteria",source:"@site/docs/Language/Statements/for-each.md",sourceDirName:"Language/Statements",slug:"/Language/Statements/for-each",permalink:"/slop-site/docs/Language/Statements/for-each",draft:!1,editUrl:"https://gitlab.com/tronied/slop/docs/Language/Statements/for-each.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Repeat (Loop)",permalink:"/slop-site/docs/Language/Statements/repeat"},next:{title:"Switch",permalink:"/slop-site/docs/Language/Statements/switch"}},l={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"for-each-loop"},"For Each (Loop)"),(0,a.kt)("p",null,"The foreach loop is a simplified version of the repeat statement. It simplifies the loop criteria\nby iterating over a collection of objects assigning each value to a scoped variable. In the\nfollowing example each employee in a collection is assigned to the variable 'emp':"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'foreach(emp : acme.employees) result = "Name: " + emp.name + ", Age: " + emp.age;\n')),(0,a.kt)("p",null,"The result from this would be an array of Strings:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'["Name: Jennifer Smith, Age: 39", "Name: Bob Seinfeld, Age: 23", ...]\n')),(0,a.kt)("p",null,"The primary reason for this loop type is to simplify the definition so we don't have to reference\neach object by using the collection and index reference. If you are just looking to extract a specific\nfield from a collection then you can simply use the following without the loop:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"acme.employees.name\n")),(0,a.kt)("p",null,"Getting back to the for each, we can also filter the results back from the loop. In the following\nexample we are filtering the names returned by age:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"foreach(emp : acme.employees) emp.age > 40 ? result = emp.name : null;\n")),(0,a.kt)("p",null,"This would just return the names of only those individuals older than 40. This use case is not perfect\nas you see we are only setting the result by using a conditional where the false case return an unused\n'null' value. This could be fixed by adding a single conditional 'if' statement, but this exceeds the\nscope for this simple scenario. Please see ",(0,a.kt)("a",{parentName:"p",href:"#adding-statements"},"Adding Statements")," for more information."))}u.isMDXComponent=!0}}]);